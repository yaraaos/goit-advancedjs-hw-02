{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst selector = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\nbutton.disabled = true;\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n\n    if (userSelectedDate > new Date()) {\n      button.disabled = false;\n      calculateDifference();\n    } else {\n      button.disabled = true;\n      iziToast.show({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        color: 'red',\n      });\n    }\n  },\n};\n\nconst fp = flatpickr(selector, options);\n\nbutton.addEventListener('click', startTimer);\n\nfunction startTimer(evt) {\n  evt.preventDefault();\n\n  button.disabled = true;\n  selector.disabled = true;\n\n  let interval = setInterval(function () {\n    let differenceMs = userSelectedDate - Date.now();\n    if (differenceMs >= 0) {\n      calculateDifference();\n    } else {\n      clearInterval(interval);\n      updateTimer({ days: '00', hours: '00', minutes: '00', seconds: '00' });\n\n      selector.disabled = false;\n\n      iziToast.show({\n        title: 'Done',\n        message: 'Countdown finished!',\n        color: 'green',\n      });\n    }\n  }, 1000);\n}\n\nfunction calculateDifference() {\n  const differenceMs = userSelectedDate - Date.now();\n  const convertedTime = convertMs(differenceMs);\n  return updateTimer(convertedTime);\n}\n\nfunction updateTimer(convertedTime) {\n  document.querySelector('[data-days]').innerHTML = convertedTime.days;\n  document.querySelector('[data-hours]').innerHTML = convertedTime.hours;\n  document.querySelector('[data-minutes]').innerHTML = convertedTime.minutes;\n  document.querySelector('[data-seconds]').innerHTML = convertedTime.seconds;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["selector","button","userSelectedDate","options","selectedDates","calculateDifference","iziToast","flatpickr","startTimer","evt","interval","updateTimer","differenceMs","convertedTime","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAClB,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAIF,CAAgB,EAExBA,EAAmB,IAAI,MACzBD,EAAO,SAAW,GAClBI,MAEAJ,EAAO,SAAW,GAClBK,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,qCACT,MAAO,KACf,CAAO,EAEJ,CACH,EAEWC,EAAUP,EAAUG,CAAO,EAEtCF,EAAO,iBAAiB,QAASO,CAAU,EAE3C,SAASA,EAAWC,EAAK,CACvBA,EAAI,eAAc,EAElBR,EAAO,SAAW,GAClBD,EAAS,SAAW,GAEpB,IAAIU,EAAW,YAAY,UAAY,CAClBR,EAAmB,KAAK,IAAG,GAC1B,EAClBG,KAEA,cAAcK,CAAQ,EACtBC,EAAY,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,IAAI,CAAE,EAErEX,EAAS,SAAW,GAEpBM,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,sBACT,MAAO,OACf,CAAO,EAEJ,EAAE,GAAI,CACT,CAEA,SAASD,GAAsB,CAC7B,MAAMO,EAAeV,EAAmB,KAAK,IAAG,EAC1CW,EAAgBC,EAAUF,CAAY,EAC5C,OAAOD,EAAYE,CAAa,CAClC,CAEA,SAASF,EAAYE,EAAe,CAClC,SAAS,cAAc,aAAa,EAAE,UAAYA,EAAc,KAChE,SAAS,cAAc,cAAc,EAAE,UAAYA,EAAc,MACjE,SAAS,cAAc,gBAAgB,EAAE,UAAYA,EAAc,QACnE,SAAS,cAAc,gBAAgB,EAAE,UAAYA,EAAc,OACrE,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}